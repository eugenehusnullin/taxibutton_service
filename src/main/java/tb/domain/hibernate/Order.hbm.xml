<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="tb.domain.order">
	<class name="Order" table="orders">
		<id name="id">
			<generator class="identity" />
		</id>
		<many-to-one name="device" column="deviceId" />
		<many-to-one name="broker" column="brokerid" />
		<property name="carUuid" length="40"></property>		
		<property name="uuid" unique-key="order_uk2" />
		<property name="notlater" />
		<property name="phone" length="20" />
		<property name="bookingDate" />
		<set name="requirements" cascade="all">
			<key>
				<column name="orderId" />
			</key>
			<one-to-many class="tb.domain.order.Requirement" />
		</set>
		<set name="destinations" cascade="all" lazy="false" sort="natural">
			<key column="orderId" />			
			<one-to-many class="tb.domain.order.AddressPoint" />
		</set>
		<set name="statuses" cascade="all" lazy="false" order-by="date desc">
			<key>
				<column name="orderId" />
			</key>
			<one-to-many class="tb.domain.order.OrderStatus" />
		</set>
		<set name="orderCancel" cascade="all">
			<key>
				<column name="orderId" />
			</key>
			<one-to-many class="tb.domain.order.OrderCancel" />
		</set>
		<set name="offerBrokerList" cascade="delete" table="offerbroker">
			<key>
				<column name="orderId" />
			</key>
			<many-to-many entity-name="tb.domain.Broker">
				<column name="brokerId" not-null="true" />
			</many-to-many>
		</set>
		<property name="orderVehicleClass">
			<type name="org.hibernate.type.EnumType">
				<param name="enumClass">tb.domain.order.VehicleClass</param>
			</type>
		</property>
		<property name="comments" length="128"/>
	</class>
</hibernate-mapping>